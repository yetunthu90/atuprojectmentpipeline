name: Laravel CI/CD with Docker Compose

on:
  push:
    branches:
      - main
      - dev

jobs:
  #Build-Test-Pushed:
    #runs-on: ubuntu-latest

    #steps:
     # - name: Checkout Repository
      #  uses: actions/checkout@v3

      #- name: Set up Docker Buildx
       # uses: docker/setup-buildx-action@v2

      #- name: Start Docker Compose Services
       # run: |
        #  docker compose up -d --build
          
      #- name: Wait for all Containers to Be Ready
       # run: sleep 20

      #- name: Install Dependencies
       # run: docker compose exec app composer install
           
      #- name: Key  generations
       # run: docker compose exec app php artisan key:generate
        
      #- name: Run Migrations
       # run: docker compose exec app php artisan migrate --force
        
      #- name: Run Tests
       # run: docker compose exec app php artisan test

      #- name: Stop and Remove Containers
       # run: docker compose down

      #- name: Show Docker Compose Images
       # run: docker compose images


      #- name: Log in to Docker Hub
       # uses: docker/login-action@v2
        #with:
         # username: ${{ secrets.DOCKER_USERNAME }}
          #password: ${{ secrets.DOCKER_PASSWORD }}

      #- name: Push App Image
       # run: |
          # Tag and push the App image
        #  docker tag atuprojectmentpipeline-app ${{ secrets.DOCKER_USERNAME }}/atupipeline-app:latest
         # docker push ${{ secrets.DOCKER_USERNAME }}/atupipeline-app
          # Tag and push the Web image
          #docker tag atuprojectmentpipeline-web  ${{ secrets.DOCKER_USERNAME }}/atupipeline-web:latest
          #docker push ${{ secrets.DOCKER_USERNAME }}/atupipeline-web
          # Tag and push the Database image
          #docker tag atuprojectmentpipeline-database ${{ secrets.DOCKER_USERNAME }}/atupipeline-mysqldb:latest
          #docker push ${{ secrets.DOCKER_USERNAME }}/atupipeline-mysqldb
          # Tag and push the phpMyAdmin image
          #docker tag atuprojectmentpipeline-pma ${{ secrets.DOCKER_USERNAME }}/atupipeline-phpmyadmin:latest
          #docker push ${{ secrets.DOCKER_USERNAME }}/atupipeline-phpmyadmin
          
  deploy:
    #needs: Build-Test-Pushed
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Kubernetes CLI
        uses: azure/setup-kubectl@v3

      - name: Configure Kubeconfig
        run: |
         mkdir -p $HOME/.kube  # Ensure .kube directory exists
         echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
         chmod 600 $HOME/.kube/config  # Secure the config file

      - name: Verify Kubernetes Connection
        run: |
          kubectl cluster-info
          kubectl get nodes
          kubectl get deployments -n default  # List all deployments

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/

      - name: Restart Deployments
        run: |
          kubectl rollout restart deployment app
          kubectl rollout restart deployment web
          kubectl rollout restart deployment database
          kubectl rollout restart deployment phpmyadmin

      - name: Verify Deployment Status
        run: kubectl get pods -o wide

